{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colorDict","USMap","path","geoPath","projection","geoAlbersUsa","this","map","d3","svg","append","setHoveredState","props","action","states","selectAll","data","feature","topology","objects","us","features","enter","attr","style","d","genderData","properties","name","colorKey","on","ev","preventDefault","usState","window","open","viewBox","width","height","ref","id","preserveAspectRatio","React","Component","ViewButton","children","value","onClick","event","console","log","target","CanICard","heading","loadingGender","canIKey","className","App","useState","setGenderData","setTopology","setLoadingGender","loadingTopology","setLoadingTopology","setColorKey","hoveredState","useEffect","then","gender","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f88464e6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './App.css';\nimport * as d3 from \"d3\";\nimport { geoAlbersUsa, geoPath } from \"d3-geo\";\n\nimport { feature } from \"topojson-client\";\n\n/*****************\n * D3 components *\n *****************/\n\nconst colorDict = {\n  \"Yes, surgery not required\": \"#00c853\",\n  \"Yes, surgery may be required\": \"#64dd17\",\n  \"Yes, surgery required\": \"#aeea00\",\n  \"Yes\": \"#00c853\",\n  \"No\": \"#d50000\",\n  \"Complicated\": \"#fbc02d\",\n  \"In progress\": \"#2962ff\",\n  \"Unknown\": \"#dddddd\",\n  \"\": \"#000000\"\n};\n\nfunction stateInfoLink(usState, key) {\n  const transEqualityLink = `https://transequality.org/documents/state/${usState}`;\n  return transEqualityLink;\n}\n\nclass USMap extends React.Component {\n  componentDidMount() {\n    const path = geoPath().projection(geoAlbersUsa());\n\n    this.map = d3.select(this.svg).append('g');\n\n\n    const setHoveredState = this.props.action;\n    this.states = this.map.selectAll(\".state\")\n        .data(feature(this.props.topology, this.props.topology.objects.us).features)\n        .enter()\n          .append(\"path\")\n            .attr(\"class\", \"state\")\n            .attr(\"d\", path)\n            .style(\"fill\", d => colorDict[this.props.genderData[d.properties.name][this.props.colorKey]])\n            .style(\"stroke\", \"#000\")\n            .style(\"stroke-width\", \"1\")\n            .on(\"mouseover\", (ev, d) => {\n              ev.preventDefault();\n              // ev.stopPropagation();\n              setHoveredState(d.properties.name);\n            })\n            .on(\"click\", (ev, d) => {\n              window.open(stateInfoLink(d.properties.name, this.props.colorKey));\n            });\n  }\n\n  componentDidUpdate() {\n    this.map.selectAll(\".state\")\n          .style(\"fill\", d => colorDict[this.props.genderData[d.properties.name][this.props.colorKey]]);\n  }\n\n  render() {\n    const viewBox = `0 0 ${this.props.width} ${this.props.height}`;\n    return <svg\n      ref={ svg => this.svg = svg }\n      id={this.props.id}\n      viewBox={viewBox}\n      preserveAspectRatio=\"xMidYMid meet\"\n      />;\n  }\n}\n\n\nfunction ViewButton({ action, colorKey, children }) {\n    const handleClick = event => { console.log(event.target.value); action(event.target.value);}\n    return <button value={colorKey} onClick={handleClick}> {children} </button>\n}\n\n\nfunction App() {\n    const [genderData, setGenderData] = React.useState({});\n    const [topology, setTopology] = React.useState({});\n    const [loadingGender, setLoadingGender] = React.useState(true);\n    const [loadingTopology, setLoadingTopology] = React.useState(true);\n    const [colorKey, setColorKey] = React.useState(\"x_dl\");\n    const [hoveredState, setHoveredState] = React.useState(\"Alabama\");\n\n    React.useEffect( () => {\n      d3.json(\"data/gender.json\").then(gender => {\n        setGenderData(gender); \n        setLoadingGender(false);\n      });\n\n      d3.json(\"data/us-albers.json\").then(topology => {\n        setTopology(topology);\n        setLoadingTopology(false);\n      });\n\n      return () => undefined;\n    }, []);\n\n    const color = loadingGender ? \"#000000\" : colorDict[genderData[hoveredState][colorKey]];\n    const style = {\"color\": color};\n\n    return <> <main>\n      <h1>US Gender Marker Map</h1>\n      <section>\n        <p>Hover a state to view its residents' rights. Information is current as of July 11, 2021.</p>\n        <p>Click on a state to view resources, statutes, policy, court decisions, and more.</p>\n        <ul>\n          <li>View map for:</li>\n          <li><ViewButton colorKey=\"x_dl\" action={setColorKey}>nonbinary, driver's license</ViewButton></li>\n          <li><ViewButton colorKey=\"x_bc\" action={setColorKey}>nonbinary, birth certificate</ViewButton></li>\n          <li><ViewButton colorKey=\"mtf_ftm\" action={setColorKey}>binary</ViewButton></li>\n        </ul>\n        {!loadingGender && !loadingTopology && <USMap id=\"map\" action={setHoveredState} colorKey={colorKey} width=\"1000\" height=\"510\" genderData={genderData} topology={topology}/>}\n      </section>\n      <footer>\n        <h2>I live in <span style={style}>{ hoveredState }</span>. Can I...</h2>\n        <div className=\"cards\">\n          <CanICard\n            heading=\"change my gender marker to a different binary gender?\"\n            genderData={genderData}\n            loadingGender={loadingGender}\n            canIKey=\"mtf_ftm\"\n            usState={hoveredState}\n          />\n          <CanICard\n            heading=\"obtain a nonbinary (X) gender marker on my driver's license or state ID?\"\n            genderData={genderData}\n            loadingGender={loadingGender}\n            canIKey=\"x_dl\"\n            usState={hoveredState}\n          />\n          <CanICard\n            heading=\"obtain a nonbinary (X) gender marker on my birth certificate?\"\n            genderData={genderData}\n            canIKey=\"x_bc\"\n            loadingGender={loadingGender}\n            usState={hoveredState}\n          />\n        </div>\n      </footer>\n    </main>\n\n    <footer>\n      <h2>You are valid.</h2>\n      <p><i>You</i> determine your gender, not your local or federal government. It is reprehensible that the US has not yet nationally recognized the existence of nonbinary genders.</p>\n      <p>For peer support, call <a href=\"https://translifeline.org/\">Trans Lifeline</a> or <a href=\"https://www.thetrevorproject.org\">Trevor</a>.</p>\n    </footer>\n    </>;\n}\n\nfunction CanICard({ heading, genderData, loadingGender, canIKey, usState }) {\n  return <div className=\"card\">\n    <h3> ...{ heading }</h3>\n    {!loadingGender && genderData[usState][canIKey]}.\n  </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}